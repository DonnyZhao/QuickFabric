handler: src/scripts/emr_rm_proxy.lambda_handler
name: emr-rm-proxy
description: Lambda function to call Resource Manager of an EMR cluster
vpc:
  securityGroupIds:
    - !Ref EMRRMProxyLambdaSG
  subnetIds: "${self:custom.config.subnet_ids}"
memorySize: 128
timeout: 30
events:
  - http:
      path: emr-service/rm-proxy
      method: get
      cors: true
      private: true
      integration: lambda
      request:
        parameters:
          querystrings:
            rmUrl: true
            metricType: true
            finalStatus: false
            states: false
            finishedTimeBegin: false
            finishedTimeEnd: false
            startedTimeBegin: false
        template:
          application/json: |
            {
            "api_request_id": "$context.requestId",
            "rm_url": "$input.params('rmUrl')",
            "metric_type": "$input.params('metricType')",
            "final_status": "$input.params('finalStatus')",
            "states": "$input.params('states')",
            "finished_time_begin": "$input.params('finishedTimeBegin')",
            "finished_time_end": "$input.params('finishedTimeEnd')",
            "started_time_begin": "$input.params('startedTimeBegin')"
            }
      response:
        headers:
          Content-Type: "'application/json'"
        template: $input.path('$')
        statusCodes:
          200:
            pattern: ''
            template:
              application/json: |
                {
                "statusCode": 200,
                "rmUrl": "$input.path('$.rm_url')",
                "metricType": "$input.path('$.metric_type')",
                "metricStats": $input.path('$.metric_stats'),
                "apiRequestId": "$input.path('$.api_request_id')",
                "lambdaRequestId": "$input.path('$.lambda_request_id')"
                }
          500:
            pattern: '.*"statusCode": 500.*'
            template:
              'application/json': $input.path('$.errorMessage')
      documentation:
        summary: "EMR RM Proxy"
        description: "Call EMR cluster RM"
        requestHeaders:
          - name: x-api-key
            description: API key
            required: true
        requestModels:
          "application/json": EMRRMProxyRequest
      reqValidatorName: EmrRequestValidatorParams
      methodResponses:
        - statusCode: '201'
          responseModels:
            "application/json": EMRRMProxyResponse
        - ${self:custom.commonModelSchemaFragments.MethodResponse500Json}

package:
  individually: true
  exclude:
    - ba_step_scripts/**
    - docker/**
    - tests/**
    - node_modules/**
    - serverless/**
    - src/**
    - "*.json"
    - "plugin_install.py"
    - config.yml
    - README.md
  include:
    - src/util/**
    - src/conf/common/**
    - src/conf/${self:custom.config.account-id}/**
    - src/__init__.py
    - src/scripts/__init__.py
    - src/scripts/emr_rm_proxy.py